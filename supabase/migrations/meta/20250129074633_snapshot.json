{
  "id": "f92832ba-e37b-4131-ac9d-07a0fbdcdfe5",
  "prevId": "3ffe770b-f83c-4f68-919a-4d65674c7419",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.accounts": {
      "name": "accounts",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true,
          "default": "auth.uid()"
        },
        "category": {
          "name": "category",
          "type": "account_category",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "accounts_user_id_index": {
          "name": "accounts_user_id_index",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "accounts_user_id_users_id_fk": {
          "name": "accounts_user_id_users_id_fk",
          "tableFrom": "accounts",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "accounts_allow_all_for_owner_policy": {
          "name": "accounts_allow_all_for_owner_policy",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": ["authenticated"],
          "using": "\"accounts\".\"user_id\" = (select auth.uid())",
          "withCheck": "\"accounts\".\"user_id\" = (select auth.uid())"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.currencies": {
      "name": "currencies",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "country": {
          "name": "country",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "currencies_name_unique": {
          "name": "currencies_name_unique",
          "nullsNotDistinct": false,
          "columns": ["name"]
        }
      },
      "policies": {
        "currencies_allow_select_for_all_policy": {
          "name": "currencies_allow_select_for_all_policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"],
          "using": "true"
        }
      },
      "checkConstraints": {
        "currencies_id_check": {
          "name": "currencies_id_check",
          "value": "\"currencies\".\"id\" = lower(\"currencies\".\"id\")"
        }
      },
      "isRLSEnabled": false
    },
    "public.exchange_rates": {
      "name": "exchange_rates",
      "schema": "",
      "columns": {
        "from": {
          "name": "from",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "to": {
          "name": "to",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "rate": {
          "name": "rate",
          "type": "numeric(65, 30)",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "exchange_rates_from_currencies_id_fk": {
          "name": "exchange_rates_from_currencies_id_fk",
          "tableFrom": "exchange_rates",
          "tableTo": "currencies",
          "columnsFrom": ["from"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "exchange_rates_to_currencies_id_fk": {
          "name": "exchange_rates_to_currencies_id_fk",
          "tableFrom": "exchange_rates",
          "tableTo": "currencies",
          "columnsFrom": ["to"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {
        "exchange_rates_pkey": {
          "name": "exchange_rates_pkey",
          "columns": ["to", "from"]
        }
      },
      "uniqueConstraints": {},
      "policies": {
        "exchange_rates_allow_select_for_all_policy": {
          "name": "exchange_rates_allow_select_for_all_policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"],
          "using": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.profiles": {
      "name": "profiles",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "main_currency": {
          "name": "main_currency",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'eur'"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "profiles_id_users_id_fk": {
          "name": "profiles_id_users_id_fk",
          "tableFrom": "profiles",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": ["id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "profiles_main_currency_currencies_id_fk": {
          "name": "profiles_main_currency_currencies_id_fk",
          "tableFrom": "profiles",
          "tableTo": "currencies",
          "columnsFrom": ["main_currency"],
          "columnsTo": ["id"],
          "onDelete": "set default",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "profiles_allow_all_for_owner_policy": {
          "name": "profiles_allow_all_for_owner_policy",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": ["authenticated"],
          "using": "\"profiles\".\"id\" = (select auth.uid())"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.subaccounts": {
      "name": "subaccounts",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'Default'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "account_id": {
          "name": "account_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "currency": {
          "name": "currency",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "subaccounts_account_id_index": {
          "name": "subaccounts_account_id_index",
          "columns": [
            {
              "expression": "account_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "subaccounts_account_id_accounts_id_fk": {
          "name": "subaccounts_account_id_accounts_id_fk",
          "tableFrom": "subaccounts",
          "tableTo": "accounts",
          "columnsFrom": ["account_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "subaccounts_currency_currencies_id_fk": {
          "name": "subaccounts_currency_currencies_id_fk",
          "tableFrom": "subaccounts",
          "tableTo": "currencies",
          "columnsFrom": ["currency"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "subaccounts_allow_all_for_owner_policy": {
          "name": "subaccounts_allow_all_for_owner_policy",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": ["authenticated"],
          "using": "EXISTS (SELECT 1 FROM \"accounts\" WHERE (\"accounts\".\"id\" = \"subaccounts\".\"account_id\" and \"accounts\".\"user_id\" = (select auth.uid())))",
          "withCheck": "EXISTS (SELECT 1 FROM \"accounts\" WHERE (\"accounts\".\"id\" = \"subaccounts\".\"account_id\" and \"accounts\".\"user_id\" = (select auth.uid())))"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.transactions": {
      "name": "transactions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "external_ref": {
          "name": "external_ref",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "amount": {
          "name": "amount",
          "type": "numeric(65, 30)",
          "primaryKey": false,
          "notNull": true
        },
        "started_date": {
          "name": "started_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "completed_date": {
          "name": "completed_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "''"
        },
        "type": {
          "name": "type",
          "type": "transaction_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "subaccount_id": {
          "name": "subaccount_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "balance": {
          "name": "balance",
          "type": "numeric(65, 30)",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true,
          "default": "auth.uid()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "sequence": {
          "name": "sequence",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "transactions_sequence_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "2147483647",
            "cache": "1",
            "cycle": false
          }
        }
      },
      "indexes": {
        "transactions_user_id_subaccount_id_started_date_sequence_index": {
          "name": "transactions_user_id_subaccount_id_started_date_sequence_index",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "subaccount_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "started_date",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            },
            {
              "expression": "sequence",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "transactions_subaccount_id_subaccounts_id_fk": {
          "name": "transactions_subaccount_id_subaccounts_id_fk",
          "tableFrom": "transactions",
          "tableTo": "subaccounts",
          "columnsFrom": ["subaccount_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "transactions_sequence_unique": {
          "name": "transactions_sequence_unique",
          "nullsNotDistinct": false,
          "columns": ["sequence"]
        }
      },
      "policies": {
        "transactions_allow_all_for_owner_policy": {
          "name": "transactions_allow_all_for_owner_policy",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": ["authenticated"],
          "using": "\"transactions\".\"user_id\" = (select auth.uid())",
          "withCheck": "\"transactions\".\"user_id\" = (select auth.uid())"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.integrations": {
      "name": "integrations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "external_id": {
          "name": "external_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true,
          "default": "auth.uid()"
        }
      },
      "indexes": {
        "integrations_user_id_index": {
          "name": "integrations_user_id_index",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "integrations_user_id_users_id_fk": {
          "name": "integrations_user_id_users_id_fk",
          "tableFrom": "integrations",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "integrations_allow_all_for_owner_policy": {
          "name": "integrations_allow_all_for_owner_policy",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": ["authenticated"],
          "using": "\"integrations\".\"user_id\" = (select auth.uid())",
          "withCheck": "\"integrations\".\"user_id\" = (select auth.uid())"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.integration_to_subaccounts": {
      "name": "integration_to_subaccounts",
      "schema": "",
      "columns": {
        "integration_id": {
          "name": "integration_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "subaccount_id": {
          "name": "subaccount_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "integration_account_id": {
          "name": "integration_account_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "integration_to_subaccounts_integration_id_integrations_id_fk": {
          "name": "integration_to_subaccounts_integration_id_integrations_id_fk",
          "tableFrom": "integration_to_subaccounts",
          "tableTo": "integrations",
          "columnsFrom": ["integration_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "integration_to_subaccounts_subaccount_id_subaccounts_id_fk": {
          "name": "integration_to_subaccounts_subaccount_id_subaccounts_id_fk",
          "tableFrom": "integration_to_subaccounts",
          "tableTo": "subaccounts",
          "columnsFrom": ["subaccount_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "integration_to_subaccounts_integration_id_subaccount_id_pk": {
          "name": "integration_to_subaccounts_integration_id_subaccount_id_pk",
          "columns": ["integration_id", "subaccount_id"]
        }
      },
      "uniqueConstraints": {
        "integration_to_subaccounts_subaccountId_unique": {
          "name": "integration_to_subaccounts_subaccountId_unique",
          "nullsNotDistinct": false,
          "columns": ["subaccount_id"]
        },
        "integration_to_subaccounts_integrationAccountId_unique": {
          "name": "integration_to_subaccounts_integrationAccountId_unique",
          "nullsNotDistinct": false,
          "columns": ["integration_account_id"]
        }
      },
      "policies": {
        "integration_to_subaccounts_allow_all_for_owner_policy": {
          "name": "integration_to_subaccounts_allow_all_for_owner_policy",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": ["authenticated"],
          "using": "EXISTS (SELECT 1 FROM \"integrations\" WHERE (\"integrations\".\"id\" = \"integration_to_subaccounts\".\"integration_id\" and \"integrations\".\"user_id\" = (select auth.uid())))",
          "withCheck": "EXISTS (SELECT 1 FROM \"integrations\" WHERE (\"integrations\".\"id\" = \"integration_to_subaccounts\".\"integration_id\" and \"integrations\".\"user_id\" = (select auth.uid())))"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {
    "public.account_category": {
      "name": "account_category",
      "schema": "public",
      "values": ["checking", "investment"]
    },
    "public.transaction_type": {
      "name": "transaction_type",
      "schema": "public",
      "values": ["card_payment", "transfer", "exchange", "topup", "correction", "other"]
    }
  },
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {
    "public.balances": {
      "columns": {
        "balance": {
          "name": "balance",
          "type": "numeric(65, 30)",
          "primaryKey": false,
          "notNull": true
        }
      },
      "definition": "select distinct on (\"transactions\".\"subaccount_id\") \"subaccount_id\" as \"subaccount_id\", \"balance\", \"started_date\" as \"started_date\" from \"transactions\" order by \"transactions\".\"subaccount_id\", \"transactions\".\"started_date\" desc, \"transactions\".\"sequence\" desc",
      "name": "balances",
      "schema": "public",
      "isExisting": false,
      "with": {
        "securityInvoker": true
      },
      "materialized": false
    }
  },
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}
